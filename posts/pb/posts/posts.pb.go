// Code generated by protoc-gen-go. DO NOT EDIT.
// source: posts/posts.proto

/*
Package posts is a generated protocol buffer package.

It is generated from these files:
	posts/posts.proto

It has these top-level messages:
	Post
	GetAllPostsRequest
	GetAllPostsResponse
	GetPostRequest
	GetPostResponse
	CreatePostRequest
	CreatePostResponse
	UpdatePostRequest
	UpdatePostResponse
	DeletePostRequest
	DeletePostResponse
*/
package posts

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Post struct {
	Id      uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId  uint32 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Title   string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Content string `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
}

func (m *Post) Reset()                    { *m = Post{} }
func (m *Post) String() string            { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()               {}
func (*Post) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Post) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Post) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Post) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Post) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type GetAllPostsRequest struct {
}

func (m *GetAllPostsRequest) Reset()                    { *m = GetAllPostsRequest{} }
func (m *GetAllPostsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAllPostsRequest) ProtoMessage()               {}
func (*GetAllPostsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetAllPostsResponse struct {
	Posts []*Post `protobuf:"bytes,1,rep,name=posts" json:"posts,omitempty"`
}

func (m *GetAllPostsResponse) Reset()                    { *m = GetAllPostsResponse{} }
func (m *GetAllPostsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAllPostsResponse) ProtoMessage()               {}
func (*GetAllPostsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetAllPostsResponse) GetPosts() []*Post {
	if m != nil {
		return m.Posts
	}
	return nil
}

type GetPostRequest struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetPostRequest) Reset()                    { *m = GetPostRequest{} }
func (m *GetPostRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPostRequest) ProtoMessage()               {}
func (*GetPostRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetPostRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetPostResponse struct {
	Post *Post `protobuf:"bytes,1,opt,name=post" json:"post,omitempty"`
}

func (m *GetPostResponse) Reset()                    { *m = GetPostResponse{} }
func (m *GetPostResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPostResponse) ProtoMessage()               {}
func (*GetPostResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetPostResponse) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type CreatePostRequest struct {
	UserId  uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
}

func (m *CreatePostRequest) Reset()                    { *m = CreatePostRequest{} }
func (m *CreatePostRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePostRequest) ProtoMessage()               {}
func (*CreatePostRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreatePostRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreatePostRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreatePostRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CreatePostResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *CreatePostResponse) Reset()                    { *m = CreatePostResponse{} }
func (m *CreatePostResponse) String() string            { return proto.CompactTextString(m) }
func (*CreatePostResponse) ProtoMessage()               {}
func (*CreatePostResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreatePostResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type UpdatePostRequest struct {
	Post *Post `protobuf:"bytes,1,opt,name=post" json:"post,omitempty"`
}

func (m *UpdatePostRequest) Reset()                    { *m = UpdatePostRequest{} }
func (m *UpdatePostRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePostRequest) ProtoMessage()               {}
func (*UpdatePostRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdatePostRequest) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type UpdatePostResponse struct {
	Post *Post `protobuf:"bytes,1,opt,name=post" json:"post,omitempty"`
}

func (m *UpdatePostResponse) Reset()                    { *m = UpdatePostResponse{} }
func (m *UpdatePostResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdatePostResponse) ProtoMessage()               {}
func (*UpdatePostResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdatePostResponse) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type DeletePostRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeletePostRequest) Reset()                    { *m = DeletePostRequest{} }
func (m *DeletePostRequest) String() string            { return proto.CompactTextString(m) }
func (*DeletePostRequest) ProtoMessage()               {}
func (*DeletePostRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeletePostRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeletePostResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *DeletePostResponse) Reset()                    { *m = DeletePostResponse{} }
func (m *DeletePostResponse) String() string            { return proto.CompactTextString(m) }
func (*DeletePostResponse) ProtoMessage()               {}
func (*DeletePostResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeletePostResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*Post)(nil), "Post")
	proto.RegisterType((*GetAllPostsRequest)(nil), "GetAllPostsRequest")
	proto.RegisterType((*GetAllPostsResponse)(nil), "GetAllPostsResponse")
	proto.RegisterType((*GetPostRequest)(nil), "GetPostRequest")
	proto.RegisterType((*GetPostResponse)(nil), "GetPostResponse")
	proto.RegisterType((*CreatePostRequest)(nil), "CreatePostRequest")
	proto.RegisterType((*CreatePostResponse)(nil), "CreatePostResponse")
	proto.RegisterType((*UpdatePostRequest)(nil), "UpdatePostRequest")
	proto.RegisterType((*UpdatePostResponse)(nil), "UpdatePostResponse")
	proto.RegisterType((*DeletePostRequest)(nil), "DeletePostRequest")
	proto.RegisterType((*DeletePostResponse)(nil), "DeletePostResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Posts service

type PostsClient interface {
	GetAllPosts(ctx context.Context, in *GetAllPostsRequest, opts ...grpc.CallOption) (*GetAllPostsResponse, error)
	GetPost(ctx context.Context, in *GetPostRequest, opts ...grpc.CallOption) (*GetPostResponse, error)
	CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*CreatePostResponse, error)
	UpdatePost(ctx context.Context, in *UpdatePostRequest, opts ...grpc.CallOption) (*UpdatePostResponse, error)
	DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostResponse, error)
}

type postsClient struct {
	cc *grpc.ClientConn
}

func NewPostsClient(cc *grpc.ClientConn) PostsClient {
	return &postsClient{cc}
}

func (c *postsClient) GetAllPosts(ctx context.Context, in *GetAllPostsRequest, opts ...grpc.CallOption) (*GetAllPostsResponse, error) {
	out := new(GetAllPostsResponse)
	err := grpc.Invoke(ctx, "/Posts/GetAllPosts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postsClient) GetPost(ctx context.Context, in *GetPostRequest, opts ...grpc.CallOption) (*GetPostResponse, error) {
	out := new(GetPostResponse)
	err := grpc.Invoke(ctx, "/Posts/GetPost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postsClient) CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*CreatePostResponse, error) {
	out := new(CreatePostResponse)
	err := grpc.Invoke(ctx, "/Posts/CreatePost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postsClient) UpdatePost(ctx context.Context, in *UpdatePostRequest, opts ...grpc.CallOption) (*UpdatePostResponse, error) {
	out := new(UpdatePostResponse)
	err := grpc.Invoke(ctx, "/Posts/UpdatePost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postsClient) DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostResponse, error) {
	out := new(DeletePostResponse)
	err := grpc.Invoke(ctx, "/Posts/DeletePost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Posts service

type PostsServer interface {
	GetAllPosts(context.Context, *GetAllPostsRequest) (*GetAllPostsResponse, error)
	GetPost(context.Context, *GetPostRequest) (*GetPostResponse, error)
	CreatePost(context.Context, *CreatePostRequest) (*CreatePostResponse, error)
	UpdatePost(context.Context, *UpdatePostRequest) (*UpdatePostResponse, error)
	DeletePost(context.Context, *DeletePostRequest) (*DeletePostResponse, error)
}

func RegisterPostsServer(s *grpc.Server, srv PostsServer) {
	s.RegisterService(&_Posts_serviceDesc, srv)
}

func _Posts_GetAllPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllPostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostsServer).GetAllPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Posts/GetAllPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostsServer).GetAllPosts(ctx, req.(*GetAllPostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Posts_GetPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostsServer).GetPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Posts/GetPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostsServer).GetPost(ctx, req.(*GetPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Posts_CreatePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostsServer).CreatePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Posts/CreatePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostsServer).CreatePost(ctx, req.(*CreatePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Posts_UpdatePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostsServer).UpdatePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Posts/UpdatePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostsServer).UpdatePost(ctx, req.(*UpdatePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Posts_DeletePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostsServer).DeletePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Posts/DeletePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostsServer).DeletePost(ctx, req.(*DeletePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Posts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Posts",
	HandlerType: (*PostsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllPosts",
			Handler:    _Posts_GetAllPosts_Handler,
		},
		{
			MethodName: "GetPost",
			Handler:    _Posts_GetPost_Handler,
		},
		{
			MethodName: "CreatePost",
			Handler:    _Posts_CreatePost_Handler,
		},
		{
			MethodName: "UpdatePost",
			Handler:    _Posts_UpdatePost_Handler,
		},
		{
			MethodName: "DeletePost",
			Handler:    _Posts_DeletePost_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "posts/posts.proto",
}

func init() { proto.RegisterFile("posts/posts.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x41, 0x4b, 0xfb, 0x40,
	0x14, 0xc4, 0xc9, 0xb6, 0x69, 0xff, 0x9d, 0xf2, 0x6f, 0xcd, 0x4b, 0x91, 0x18, 0x2f, 0x61, 0xed,
	0xa1, 0x87, 0xb2, 0x85, 0x4a, 0xc1, 0xab, 0x28, 0x14, 0x6f, 0x12, 0xf0, 0x24, 0x08, 0x6a, 0xf6,
	0x50, 0x1a, 0xba, 0xb1, 0xbb, 0xfd, 0x26, 0x7e, 0x60, 0xe9, 0x36, 0x36, 0x49, 0x13, 0xf5, 0x12,
	0xd8, 0xc9, 0xcb, 0xec, 0xbc, 0xdf, 0x10, 0x78, 0x99, 0xd2, 0x46, 0xcf, 0xec, 0x53, 0x64, 0x5b,
	0x65, 0x14, 0x7f, 0x41, 0xfb, 0x51, 0x69, 0x43, 0x03, 0xb0, 0x55, 0x12, 0x38, 0x91, 0x33, 0xf9,
	0x1f, 0xb3, 0x55, 0x42, 0xe7, 0xe8, 0xec, 0xb4, 0xdc, 0x3e, 0x24, 0x01, 0xb3, 0x5a, 0x7e, 0xa2,
	0x11, 0x5c, 0xb3, 0x32, 0xa9, 0x0c, 0x5a, 0x91, 0x33, 0xe9, 0xc5, 0x87, 0x03, 0x05, 0xe8, 0xbe,
	0xab, 0x8d, 0x91, 0x1b, 0x13, 0xb4, 0xad, 0xfe, 0x7d, 0xe4, 0x23, 0xd0, 0x52, 0x9a, 0xdb, 0x34,
	0xdd, 0xdf, 0xa2, 0x63, 0xf9, 0xb1, 0x93, 0xda, 0xf0, 0x39, 0xfc, 0x8a, 0xaa, 0x33, 0xb5, 0xd1,
	0x92, 0x2e, 0xe1, 0xda, 0x6c, 0x81, 0x13, 0xb5, 0x26, 0xfd, 0xb9, 0x2b, 0xf6, 0xaf, 0xe3, 0x83,
	0xc6, 0x23, 0x0c, 0x96, 0xd2, 0x58, 0xe5, 0xe0, 0x72, 0x9a, 0x99, 0x4f, 0x31, 0x3c, 0x4e, 0xe4,
	0x8e, 0x17, 0x68, 0xef, 0xbf, 0xb6, 0x43, 0x47, 0x43, 0x2b, 0xf1, 0x67, 0x78, 0x77, 0x5b, 0xf9,
	0x6a, 0x64, 0xd9, 0xb2, 0x58, 0xdb, 0x69, 0x5e, 0x9b, 0xfd, 0xb0, 0x76, 0xab, 0xba, 0xf6, 0x18,
	0x54, 0x36, 0xcf, 0xd3, 0x0c, 0xc0, 0xd4, 0xda, 0x3a, 0xff, 0x8b, 0x99, 0x5a, 0x73, 0x01, 0xef,
	0x29, 0x4b, 0x4e, 0x22, 0xfc, 0x12, 0x79, 0x06, 0x2a, 0xcf, 0xff, 0xbd, 0xe3, 0x15, 0xbc, 0x7b,
	0x99, 0xca, 0xea, 0x05, 0x05, 0xb6, 0x9e, 0xc5, 0x36, 0x06, 0x95, 0x87, 0x9a, 0xb3, 0xce, 0x3f,
	0x19, 0x5c, 0xdb, 0x16, 0xdd, 0xa0, 0x5f, 0x2a, 0x8f, 0x7c, 0x51, 0x2f, 0x38, 0x1c, 0x89, 0xa6,
	0x7e, 0xa7, 0xe8, 0xe6, 0x05, 0xd1, 0x50, 0x54, 0xcb, 0x0c, 0xcf, 0xc4, 0x69, 0x77, 0x0b, 0xa0,
	0x60, 0x48, 0x24, 0x6a, 0x6d, 0x85, 0xbe, 0x68, 0x80, 0xbc, 0x00, 0x0a, 0x48, 0x44, 0xa2, 0x46,
	0x38, 0xf4, 0x45, 0x03, 0xc5, 0x05, 0x50, 0x50, 0x20, 0x12, 0x35, 0x6e, 0xa1, 0x2f, 0xea, 0x98,
	0xde, 0x3a, 0xf6, 0x37, 0xba, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x99, 0x67, 0x50, 0x5b,
	0x03, 0x00, 0x00,
}
